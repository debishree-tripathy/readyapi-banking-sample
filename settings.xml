<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project xmlns:con="http://eviware.com/soapui/config" id="d3f02990-c139-4e54-843a-95a21e6a0585" created="3.61.0" activeEnvironment="Default environment" encryptionMode="Not encrypted" name="BankingSimulation" resourceRoot="" projectVersion="" updated="3.56.0" compositeProjectFormat="1.3">
  <con:settings>
    <con:setting id="d3f02990-c139-4e54-843a-95a21e6a0585fileName">DT2</con:setting>
  </con:settings>
  <con:properties>
    <con:property>
      <con:name>lastCustomerNumber</con:name>
      <con:value>100042</con:value>
    </con:property>
  </con:properties>
  <con:wssContainer/>
  <con:databaseConnectionContainer>
    <con:databaseConnection>
      <con:name>local</con:name>
      <con:driver>com.mysql.jdbc.Driver</con:driver>
      <con:connectionString>jdbc:mysql://127.0.0.1:3306/banking?user=root&amp;password=PASS_VALUE</con:connectionString>
      <con:password>root</con:password>
      <con:connectionProperties/>
    </con:databaseConnection>
  </con:databaseConnectionContainer>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>